mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
#geom_sf(data = sample_n(burglaries18, 3000), size = .5, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
#labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
bind <- rbind(theft_KDE_sf, theft_risk_sf)
theft_ppp <- as.ppp(st_coordinates(thefts2021), W = st_bbox(final_net))
theft.1000 <- spatstat.explore::density.ppp(theft_ppp, 1000)
theft_KDE_sum <- as.data.frame(theft.1000) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
kde_breaks <- classIntervals(theft_KDE_sum$value,
n = 5, "fisher")
theft_KDE_sf <- theft_KDE_sum %>%
mutate(label = "Kernel Density",
Risk_Category = classInt::findCols(kde_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(thefts2021) %>% mutate(theftcount = 1), ., sum) %>%
mutate(theftCount = replace_na(theftcount, 0))) %>%
dplyr::select(label, Risk_Category, theftcount)
ml_breaks <- classIntervals(reg.spatialCV$Prediction,
n = 5, "fisher")
theft_risk_sf <-
reg.spatialCV %>%
mutate(label = "Risk Predictions",
Risk_Category =classInt::findCols(ml_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(thefts2021) %>% mutate(theftcount = 1), ., sum) %>%
mutate(theftcount = replace_na(theftcount, 0))) %>%
dplyr::select(label,Risk_Category, theftcount)
bind <- rbind(theft_KDE_sf, theft_risk_sf)
View(bind)
theft_ppp <- as.ppp(st_coordinates(thefts2021), W = st_bbox(final_net))
theft.1000 <- spatstat.explore::density.ppp(theft_ppp, 1000)
theft_KDE_sum <- as.data.frame(theft.1000) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
kde_breaks <- classIntervals(theft_KDE_sum$value,
n = 5, "fisher")
theft_KDE_sf <- theft_KDE_sum %>%
mutate(label = "Kernel Density",
Risk_Category = classInt::findCols(kde_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(thefts2021) %>% mutate(theftcount = 1), ., sum) %>%
mutate(theftcount = replace_na(theftcount, 0))) %>%
dplyr::select(label, Risk_Category, theftcount)
ml_breaks <- classIntervals(reg.spatialCV$Prediction,
n = 5, "fisher")
theft_risk_sf <-
reg.spatialCV %>%
mutate(label = "Risk Predictions",
Risk_Category =classInt::findCols(ml_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(thefts2021) %>% mutate(theftcount = 1), ., sum) %>%
mutate(theftcount = replace_na(theftcount, 0))) %>%
dplyr::select(label,Risk_Category, theftcount)
bind <- rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
#geom_sf(data = sample_n(burglaries18, 3000), size = .5, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
#geom_sf(data = sample_n(burglaries18, 3000), size = .5, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
correlation.long <-
st_drop_geometry(final_net) %>%
dplyr::select(-uniqueID, -CVID, -police_name, -nbh_names) %>%
gather(Variable, Value, -theft_count)
View(final_net)
correlation.long <-
st_drop_geometry(final_net) %>%
dplyr::select(-uniqueID, -cvID, -police_name, -nbh_names) %>%
gather(Variable, Value, -theft_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, theft_count, use = "complete.obs"))
ggplot(correlation.long, aes(Value, theft_count)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Theft count as a function of risk factors") +
plotTheme()
thefts2022<-
st_read("https://maps2.dcgis.dc.gov/dcgis/rest/services/FEEDS/MPD/MapServer/4/query?outFields=*&where=1%3D1&f=geojson") %>%
st_transform('ESRI:103376') %>%
filter(OFFENSE == 'THEFT/OTHER')
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = thefts2022, size = .5, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .5, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .1, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .1, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket") +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .1, colour = "blue") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket") +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .1, colour = "grey90") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket") +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .05, colour = "grey90") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket") +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .05, colour = "grey90") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket",direction=-1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2017 burglar risk predictions; 2018 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .05, colour = "grey70") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket",direction=-1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 theft risk predictions; 2022 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .1, colour = "grey50") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket",direction=-1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 theft risk predictions; 2022 burglaries") +
mapTheme(title_size = 14)
theft_ppp <- as.ppp(st_coordinates(thefts2021), W = st_bbox(final_net))
theft.1000 <- spatstat.explore::density.ppp(theft_ppp, 1000)
theft_KDE_sum <- as.data.frame(theft.1000) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
kde_breaks <- classIntervals(theft_KDE_sum$value,
n = 5, "fisher")
theft_KDE_sf <- theft_KDE_sum %>%
mutate(label = "Kernel Density",
Risk_Category = classInt::findCols(kde_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(thefts2022) %>% mutate(theftcount = 1), ., sum) %>%
mutate(theftcount = replace_na(theftcount, 0))) %>%
dplyr::select(label, Risk_Category, theftcount)
ml_breaks <- classIntervals(reg.spatialCV$Prediction,
n = 5, "fisher")
theft_risk_sf <-
reg.spatialCV %>%
mutate(label = "Risk Predictions",
Risk_Category =classInt::findCols(ml_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(thefts2022) %>% mutate(theftcount = 1), ., sum) %>%
mutate(theftcount = replace_na(theftcount, 0))) %>%
dplyr::select(label,Risk_Category, theftcount)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .1, colour = "grey50") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket",direction=-1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 theft risk predictions; 2022 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(theftcount = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = theftcount / sum(theftcount)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2018 burglaries",
y = "% of Test Set Burglaries (per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
# View(crossValidate)
## define the variables we want
reg.vars <- c("illegaldumping.nn", "restaurants.nn","rodents.nn","wealth_inequality_index")
## RUN REGRESSIONS
reg.spatialCV <- crossValidate(
dataset = final_net,
id = "nbh_names",
dependentVariable = "theft_count",
indVariables = reg.vars) %>%
dplyr::select(cvID = nbh_names, theft_count, Prediction, geometry)
reg.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "theft_count",
indVariables = reg.vars) %>%
dplyr::select(cvID = cvID, theft_count, Prediction, geometry)
reg.summary <-
rbind(mutate(reg.spatialCV,Error = Prediction - theft_count,
Regression = "Spatial Location CV"),
mutate(reg.CV, Error = Prediction - theft_count,
Regression = "Random k-fold CV"))
error_by_reg_and_fold <-
reg.summary %>%
group_by(Regression, cvID) %>%
summarize(Mean_Error = mean(Prediction - theft_count, na.rm = T),
MAE = mean(abs(Mean_Error), na.rm = T),
SD_MAE = mean(abs(Mean_Error), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold %>%
ggplot() +
geom_sf(aes(fill = MAE)) +
facet_wrap(~Regression) +
scale_fill_viridis() +
labs(title = "Theft errors by Regression") +
mapTheme() + theme(legend.position="bottom")
st_drop_geometry(error_by_reg_and_fold) %>%
group_by(Regression) %>%
summarize(Mean_MAE = round(mean(MAE), 2),
SD_MAE = round(sd(MAE), 2)) %>%
kable() %>%
kable_styling("striped", full_width = F)
tracts20 <-
get_acs(geography = "tract", variables = c("B01001_001E","B01001A_001E"),
year = 2020, state='DC', geometry=T) %>%
st_transform('ESRI:103376')  %>%
dplyr::select(variable, estimate, GEOID) %>%
spread(variable, estimate) %>%
rename(TotalPop = B01001_001,
NumberWhites = B01001A_001) %>%
mutate(percentWhite = NumberWhites / TotalPop,
raceContext = ifelse(percentWhite > .5, "Majority_White", "Majority_Non_White"))
ggplot()+
geom_sf(data=tracts20, aes(fill=raceContext))
reg.summary %>%
st_centroid() %>%
st_join(tracts20) %>%
na.omit() %>%
st_drop_geometry() %>%
group_by(Regression, raceContext) %>%
summarize(mean.Error = mean(Error, na.rm = T)) %>%
spread(raceContext, mean.Error) %>%
kable(caption = "Mean Error by neighborhood racial context") %>%
kable_styling("striped", full_width = F)
thefts2022<-
st_read("https://maps2.dcgis.dc.gov/dcgis/rest/services/FEEDS/MPD/MapServer/4/query?outFields=*&where=1%3D1&f=geojson") %>%
st_transform('ESRI:103376') %>%
filter(OFFENSE == 'THEFT/OTHER')
theft_ppp <- as.ppp(st_coordinates(thefts2021), W = st_bbox(final_net))
theft.1000 <- spatstat.explore::density.ppp(theft_ppp, 1000)
theft_KDE_sum <- as.data.frame(theft.1000) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
kde_breaks <- classIntervals(theft_KDE_sum$value,
n = 5, "fisher")
theft_KDE_sf <- theft_KDE_sum %>%
mutate(label = "Kernel Density",
Risk_Category = classInt::findCols(kde_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(thefts2022) %>% mutate(theftcount = 1), ., sum) %>%
mutate(theftcount = replace_na(theftcount, 0))) %>%
dplyr::select(label, Risk_Category, theftcount)
ml_breaks <- classIntervals(reg.spatialCV$Prediction,
n = 5, "fisher")
theft_risk_sf <-
reg.spatialCV %>%
mutate(label = "Risk Predictions",
Risk_Category =classInt::findCols(ml_breaks),
Risk_Category = case_when(
Risk_Category == 5 ~ "5th",
Risk_Category == 4 ~ "4th",
Risk_Category == 3 ~ "3rd",
Risk_Category == 2 ~ "2nd",
Risk_Category == 1 ~ "1st")) %>%
cbind(
aggregate(
dplyr::select(thefts2022) %>% mutate(theftcount = 1), ., sum) %>%
mutate(theftcount = replace_na(theftcount, 0))) %>%
dplyr::select(label,Risk_Category, theftcount)
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(thefts2022, 3000), size = .1, colour = "grey50") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket",direction=-1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 theft risk predictions; 2022 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(theftcount = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = theftcount / sum(theftcount)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2018 burglaries",
y = "% of Test Set Burglaries (per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
rbind(theft_KDE_sf, theft_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(theftcount = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = theftcount / sum(theftcount)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2022 theft",
y = "% of Test Set Burglaries (per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
rbind(theft_KDE_sf, theft_risk_sf) %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = thefts2022, size = .1, colour = "grey50") +
facet_wrap(~label, ) +
scale_fill_viridis_d(option="rocket",direction=-1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 theft risk predictions; 2022 burglaries") +
mapTheme(title_size = 14)
rbind(theft_KDE_sf, theft_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(theftcount = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = theftcount / sum(theftcount)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2022 theft",
y = "% of  Test Set Thefts Per Model (per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
st_drop_geometry(reg.summary) %>%
group_by(Regression) %>%
summarize(Mean_MAE = round(abs(error), 2),
SD_MAE = round(sd(abs(error), 2)) %>%
kable() %>%
kable_styling("striped", full_width = F)
st_drop_geometry(reg.summary) %>%
group_by(Regression) %>%
summarize(Mean_MAE = round(abs(error), 2),
SD_MAE = round(sd(abs(error), 2)) %>%
kable()
st_drop_geometry(reg.summary) %>%
group_by(Regression) %>%
summarize(Mean_MAE = round(abs(error), 2),
SD_MAE = round(sd(abs(error), 2))) %>%
kable()
st_drop_geometry(reg.summary) %>%
group_by(Regression) %>%
mutate(abs_error = abs(Error)) %>%
summarize(Mean_MAE = round(mean(abs(abs_error)), 2),
SD_MAE = round(sd(abs(abs_error), 2))) %>%
kable() %>%
kbl_classic()
st_drop_geometry(reg.summary) %>%
group_by(Regression) %>%
mutate(abs_error = abs(Error)) %>%
summarize(Mean_MAE = round(mean(abs(abs_error)), 2),
SD_MAE = round(sd(abs(abs_error), 2))) %>%
kable()
st_drop_geometry(reg.summary) %>%
group_by(Regression) %>%
mutate(abs_error = abs(Error)) %>%
summarize(Mean_MAE = round(mean(abs(abs_error)), 2),
SD_MAE = round(sd(abs(abs_error), 2))) %>%
kable() %>%
kable_classic()
