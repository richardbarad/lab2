geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
stat_density2d(data = data.frame(st_coordinates(thefts2021)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 100, geom = 'polygon') +
scale_fill_gradient(low = "yellow", high = "red")+
scale_alpha(range = c(0.00, 0.95), guide = FALSE) +
labs(title = "Density of Non Auto Thefts") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14) + theme(legend.position = "none"))
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
geom_sf(data = thefts2021, colour="orange", size=0.1, show.legend = "point") +
labs(title= "Thefts (Non Auto), Washington DC, 2023") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
stat_density2d(data = data.frame(st_coordinates(thefts2021)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 100, geom = 'polygon') +
scale_fill_gradient(low = "yellow", high = "red")+
scale_alpha(range = c(0.00, 0.95), guide = FALSE) +
labs(title = "Density of Non Auto Thefts") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14)
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
geom_sf(data = thefts2021, colour="orange", size=0.1, show.legend = "point") +
labs(title= "Thefts (Non Auto), Washington DC, 2023") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
stat_density2d(data = data.frame(st_coordinates(thefts2021)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 100, geom = 'polygon') +
scale_fill_gradient(low = "yellow", high = "red")+
scale_alpha(range = c(0.00, 0.95), guide = FALSE) +
labs(title = "Density of Non Auto Thefts") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14)
)
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
geom_sf(data = thefts2021, colour="orange", size=0.1, show.legend = "point") +
labs(title= "Thefts (Non Auto), Washington DC, 2023") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
stat_density2d(data = data.frame(st_coordinates(thefts2021)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 100, geom = 'polygon') +
scale_fill_gradient(low = "yellow", high = "red")+
scale_alpha(range = c(0.00, 0.95), guide = FALSE) +
labs(title = "Density of Non Auto Thefts") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14) + theme(legend.position = "none")
)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)
library(sf)
library(viridis)
# functions
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
thefts2021<-
st_read("https://maps2.dcgis.dc.gov/dcgis/rest/services/FEEDS/MPD/MapServer/3/query?outFields=*&where=1%3D1&f=geojson") %>%
st_transform('ESRI:103376') %>%
filter(OFFENSE == 'THEFT/OTHER')
dc_quadrents<- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Administrative_Other_Boundaries_WebMercator/MapServer/11/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('ESRI:103376')
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)
library(sf)
# functions
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
geom_sf(data = thefts2021, colour="orange", size=0.1, show.legend = "point") +
labs(title= "Thefts (Non Auto), Washington DC, 2023") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
stat_density2d(data = data.frame(st_coordinates(thefts2021)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 100, geom = 'polygon') +
scale_fill_gradient(low = "yellow", high = "red")+
scale_alpha(range = c(0.00, 0.95), guide = FALSE) +
labs(title = "Density of Non Auto Thefts") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14) + theme(legend.position = "none")
)
fishnet <-
st_make_grid(dc_quadrents,
cellsize = 500,
square = TRUE) %>%
.[dc_quadrents] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
View(fishnet)
theft_net <- st_join(thefts2021,fishnet)
View(theft_net)
View(fishnet)
View(theft_net)
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
group_by('uniqueID') %>% tally()
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
View(theft_net)
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
group_by(uniqueID) %>% tally()
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
View(theft_net)
View(theft_net)
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry()
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n)
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n)
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
View(theft_net)
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID")
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
View(theft_net)
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = is.na(theft_count),0,theft_count)
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count)
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count))
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
fishnet <-
st_make_grid(dc_quadrents,
cellsize = 200,
square = TRUE) %>%
.[dc_quadrents] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
??st_make_grid()
fishnet <-
st_make_grid(dc_quadrents,
cellsize = 5280,
square = TRUE) %>%
.[dc_quadrents] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count))
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
fishnet <-
st_make_grid(dc_quadrents,
cellsize = 5280/4,
square = TRUE) %>%
.[dc_quadrents] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count))
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## using {sf} to create the grid
## Note the `.[chicagoBoundary] %>% ` line. This is needed to clip the grid to our data
fishnet <-
st_make_grid(chicagoBoundary,
cellsize = 500,
square = TRUE) %>%
.[chicagoBoundary] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis()
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis(option='heat')
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis(option="magma")
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis(option="mako")
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
??scale_fill_viridis()
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis(option="mako",direction=-1)
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis(option="magma",direction=-1)
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis(option="rocket",direction=-1)
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
fishnet <-
st_make_grid(dc_quadrents,
cellsize = 5280/6,
square = TRUE) %>%
.[dc_quadrents] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis(option="rocket",direction=-1)
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
fishnet <-
st_make_grid(dc_quadrents,
cellsize = 5280/4,
square = TRUE) %>%
.[dc_quadrents] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis(option="rocket",direction=-1)
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
thefts2021<-
st_read("https://maps2.dcgis.dc.gov/dcgis/rest/services/FEEDS/MPD/MapServer/3/query?outFields=*&where=1%3D1&f=geojson") %>%
st_transform('ESRI:103376') %>%
filter(OFFENSE == 'THEFT/OTHER')
dc_quadrents<- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Administrative_Other_Boundaries_WebMercator/MapServer/11/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('ESRI:103376')
dc_water -> st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Planimetrics_2015/MapServer/14/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('ESRI:103376')
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
geom_sf(data=dc_water,fill='lightblue')+
geom_sf(data = thefts2021, colour="orange", size=0.1, show.legend = "point") +
labs(title= "Thefts (Non Auto), Washington DC, 2023") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
stat_density2d(data = data.frame(st_coordinates(thefts2021)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 100, geom = 'polygon') +
scale_fill_gradient(low = "yellow", high = "red")+
scale_alpha(range = c(0.00, 0.95), guide = FALSE) +
geom_sf(data=dc_water,fill='lightblue') +
labs(title = "Density of Non Auto Thefts") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14) + theme(legend.position = "none")
)
thefts2021<-
st_read("https://maps2.dcgis.dc.gov/dcgis/rest/services/FEEDS/MPD/MapServer/3/query?outFields=*&where=1%3D1&f=geojson") %>%
st_transform('ESRI:103376') %>%
filter(OFFENSE == 'THEFT/OTHER')
dc_quadrents<- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Administrative_Other_Boundaries_WebMercator/MapServer/11/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('ESRI:103376')
dc_water <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Planimetrics_2015/MapServer/14/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('ESRI:103376')
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
geom_sf(data=dc_water,fill='lightblue')+
geom_sf(data = thefts2021, colour="orange", size=0.1, show.legend = "point") +
labs(title= "Thefts (Non Auto), Washington DC, 2023") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
stat_density2d(data = data.frame(st_coordinates(thefts2021)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 100, geom = 'polygon') +
scale_fill_gradient(low = "yellow", high = "red")+
scale_alpha(range = c(0.00, 0.95), guide = FALSE) +
geom_sf(data=dc_water,fill='lightblue') +
labs(title = "Density of Non Auto Thefts") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14) + theme(legend.position = "none")
)
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
geom_sf(data=dc_water,fill='lightblue',color='transparent')+
geom_sf(data = thefts2021, colour="orange", size=0.1, show.legend = "point") +
labs(title= "Thefts (Non Auto), Washington DC, 2023") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = dc_quadrents, fill = "white",color='transparent') +
stat_density2d(data = data.frame(st_coordinates(thefts2021)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 100, geom = 'polygon') +
scale_fill_gradient(low = "yellow", high = "red")+
scale_alpha(range = c(0.00, 0.95), guide = FALSE) +
geom_sf(data=dc_water,fill='lightblue',color='transparent') +
labs(title = "Density of Non Auto Thefts") +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme(title_size = 14) + theme(legend.position = "none")
)
## add a value of 1 to each crime, sum them with aggregate
theft_net <- st_join(thefts2021,fishnet) %>%
st_drop_geometry() %>%
group_by(uniqueID) %>% tally() %>%
rename(theft_count = n) %>%
left_join(fishnet,.,by = "uniqueID") %>%
mutate(theft_count = ifelse(is.na(theft_count),0,theft_count))
ggplot()+
geom_sf(data = theft_net, aes(fill=theft_count), color='transparent')+
scale_fill_viridis(option="rocket",direction=-1)+
geom_sf(data=dc_water,fill='lightblue',color='transparent') +
geom_sf(data = dc_quadrents, fill='transparent',color='grey10') +
mapTheme()
# For demo. requires updated mapview package
# xx <- mapview::mapview(crime_net, zcol = "countBurglaries")
# yy <- mapview::mapview(mutate(burglaries, ID = seq(1:n())))
# xx + yy
