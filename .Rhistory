View(tracts20)
tracts20 <-
get_acs(geography = "tract",
variables = c("B25026_001E","B02001_002E",
"B15001_050E","B15001_009E",
"B19013_001E","B25058_001E",
"B06012_002E"),
year=2020,
state=42,
county=101,
geometry=TRUE,
output="wide")
View(tracts20)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B00001_001E',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'alaskan_native_pop' = 'B01001C_001E',
'asian_pop':'B01001D_001E',
'native_hawian_pop':'B01001E_001E',
'other_pop':'B01001F_001E',
'two_races_pop':'B01001G_001E',
'median_income':'B19013_001E',
'rent':'B25058_001E')
View(dc2017tracts)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B00001_001E',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'alaskan_native_pop' = 'B01001C_001E',
'asian_pop'='B01001D_001E',
'native_hawian_pop'='B01001E_001E',
'other_pop'='B01001F_001E',
'two_races_pop'='B01001G_001E',
'median_income'='B19013_001E',
'median_rent'='B25058_001E')
acs_variables <- c('B00001_001E', #Total Population
'B01001B_001E', #African American Pop
'B01001A_001E', #White Population
'B01001C_001E', #Alaskan and Native American
'B01001D_001E', #Asian
'B01001E_001E', #Native Hawian or Pacfic Islander
'B01001F_001E', #Other
'B01001G_001E', #Two Races
'B19013_001E', #Median Income
'B25058_001E') #Rent
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B00001_001E',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'alaskan_native_pop' = 'B01001C_001E',
'asian_pop'='B01001D_001E',
'native_hawian_pop'='B01001E_001E',
'other_pop'='B01001F_001E',
'two_races_pop'='B01001G_001E',
'median_income'='B19013_001E',
'median_rent'='B25058_001E')
View(dc2017tracts)
state = 'DC',
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B00001_001E',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'alaskan_native_pop' = 'B01001C_001E',
'asian_pop'='B01001D_001E',
'native_hawian_pop'='B01001E_001E',
'other_pop'='B01001F_001E',
'two_races_pop'='B01001G_001E',
'median_income'='B19013_001E',
'median_rent'='B25058_001E') %>%
dplyr::select(-NAME, -starts_with("B"))
View(dc2017tracts)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B00001_001E',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'Alaskan_native_pop' = 'B01001C_001E',
'Asian_pop'='B01001D_001E',
'Native_hawian_pop'='B01001E_001E',
'Other_pop'='B01001F_001E',
'Two_races_pop'='B01001G_001E',
'Median_income'='B19013_001E',
'Median_rent'='B25058_001E') %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(totalpop2 = African_pop + White_pop + Alasnkan_native_pop + Asian_pop + Native_hawian_pop + Other_pop + Two_races_pop)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B00001_001E',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'Alaskan_native_pop' = 'B01001C_001E',
'Asian_pop'='B01001D_001E',
'Native_hawian_pop'='B01001E_001E',
'Other_pop'='B01001F_001E',
'Two_races_pop'='B01001G_001E',
'Median_income'='B19013_001E',
'Median_rent'='B25058_001E') %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(totalpop2 = African_pop + White_pop + Alaskan_native_pop + Asian_pop + Native_hawian_pop + Other_pop + Two_races_pop)
View(dc2017tracts)
acs_variables <- c('B01001A_001', #Total Population
'B01001B_001E', #African American Pop
'B01001A_001E', #White Population
'B01001C_001E', #Alaskan and Native American
'B01001D_001E', #Asian
'B01001E_001E', #Native Hawian or Pacfic Islander
'B01001F_001E', #Other
'B01001G_001E', #Two Races
'B19013_001E', #Median Income
'B25058_001E') #Rent
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B00001_001E',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'Alaskan_native_pop' = 'B01001C_001E',
'Asian_pop'='B01001D_001E',
'Native_hawian_pop'='B01001E_001E',
'Other_pop'='B01001F_001E',
'Two_races_pop'='B01001G_001E',
'Median_income'='B19013_001E',
'Median_rent'='B25058_001E') %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(totalpop2 = African_pop + White_pop + Alaskan_native_pop + Asian_pop + Native_hawian_pop + Other_pop + Two_races_pop)
acs_variables <- c('B01001A_001', #Total Population
'B01001B_001E', #African American Pop
'B01001A_001E', #White Population
'B01001C_001E', #Alaskan and Native American
'B01001D_001E', #Asian
'B01001E_001E', #Native Hawian or Pacfic Islander
'B01001F_001E', #Other
'B01001G_001E', #Two Races
'B19013_001E', #Median Income
'B25058_001E') #Rent
census_api_key('4b917a3ebce557bc497aebb5aba1b04f0ff9c5ba',overwrite = FALSE)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B01001A_001',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'Alaskan_native_pop' = 'B01001C_001E',
'Asian_pop'='B01001D_001E',
'Native_hawian_pop'='B01001E_001E',
'Other_pop'='B01001F_001E',
'Two_races_pop'='B01001G_001E',
'Median_income'='B19013_001E',
'Median_rent'='B25058_001E') %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(totalpop2 = African_pop + White_pop + Alaskan_native_pop + Asian_pop + Native_hawian_pop + Other_pop + Two_races_pop)
View(dc2017tracts)
acs_variables <- c('B01001A_001', #Total Population
'B01001B_001E', #African American Pop
'B01001A_001E', #White Population
'B01001C_001E', #Alaskan and Native American
'B01001D_001E', #Asian
'B01001E_001E', #Native Hawian or Pacfic Islander
'B01001F_001E', #Other
'B01001G_001E', #Two Races
'B19013_001E', #Median Income
'B25058_001E') #Rent
View(variables)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B01001A_001',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'Alaskan_native_pop' = 'B01001C_001E',
'Asian_pop'='B01001D_001E',
'Native_hawian_pop'='B01001E_001E',
'Other_pop'='B01001F_001E',
'Two_races_pop'='B01001G_001E',
'Median_income'='B19013_001E',
'Median_rent'='B25058_001E') %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(totalpop2 = African_pop + White_pop + Alaskan_native_pop + Asian_pop + Native_hawian_pop + Other_pop + Two_races_pop)
acs_variables <- c('B01001A_001', #Total Population
'B01001B_001E', #African American Pop
'B01001A_001E', #White Population
'B01001C_001E', #Alaskan and Native American
'B01001D_001E', #Asian
'B01001E_001E', #Native Hawian or Pacfic Islander
'B01001F_001E', #Other
'B01001G_001E', #Two Races
'B19013_001E', #Median Income
'B25058_001E') #Rent
acs_variables <- c('B01001A_001E', #Total Population
'B01001B_001E', #African American Pop
'B01001A_001E', #White Population
'B01001C_001E', #Alaskan and Native American
'B01001D_001E', #Asian
'B01001E_001E', #Native Hawian or Pacfic Islander
'B01001F_001E', #Other
'B01001G_001E', #Two Races
'B19013_001E', #Median Income
'B25058_001E') #Rent
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B01001A_001E',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'Alaskan_native_pop' = 'B01001C_001E',
'Asian_pop'='B01001D_001E',
'Native_hawian_pop'='B01001E_001E',
'Other_pop'='B01001F_001E',
'Two_races_pop'='B01001G_001E',
'Median_income'='B19013_001E',
'Median_rent'='B25058_001E') %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(totalpop2 = African_pop + White_pop + Alaskan_native_pop + Asian_pop + Native_hawian_pop + Other_pop + Two_races_pop)
View(dc2017tracts)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B01001A_001E',
'African_pop' = 'B01001B_001E',
'White_pop' = 'B01001A_001E',
'Alaskan_native_pop' = 'B01001C_001E',
'Asian_pop'='B01001D_001E',
'Native_hawian_pop'='B01001E_001E',
'Other_pop'='B01001F_001E',
'Two_races_pop'='B01001G_001E',
'Median_income'='B19013_001E',
'Median_rent'='B25058_001E') %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(totalpop2 = African_pop + White_pop + Alaskan_native_pop + Asian_pop + Native_hawian_pop + Other_pop + Two_races_pop)
View(dc2017tracts)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')
View(dc2017tracts)
acs_variables <- c('B25026_001', #Total Population
'B05003B_001', #African American Pop
'B05003A_001', #White Population
'B05003C_001', #Alaskan and Native American
'B05003D_001', #Asian
'B05003E_001', #Native Hawian or Pacfic Islander
'B05003F_001', #Other
'B05003G_001', #Two Races
'B19013_001', #Median Income
'B25058_001') #Rent
census_api_key('4b917a3ebce557bc497aebb5aba1b04f0ff9c5ba',overwrite = FALSE)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B25026_001E',
'African_pop' = 'B05003B_001E',
'White_pop' = 'B05003A_001E',
'Alaskan_native_pop' = 'B05003C_001E',
'Asian_pop'='B05003D_001E',
'Native_hawian_pop'='B05003E_001E',
'Other_pop'='B05003F_001E',
'Two_races_pop'='B05003G_001E',
'Median_income'='B19013_001E',
'Median_rent'='B25058_001E') %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(totalpop2 = African_pop + White_pop + Alaskan_native_pop + Asian_pop + Native_hawian_pop + Other_pop + Two_races_pop)
View(dc2017tracts)
View(variables)
dcmetro <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Transportation_Rail_Bus_WebMercator/MapServer/51/query?outFields=*&where=1%3D1&f=geojson')
library(tidycensus)
library(tidyverse)
library(kableExtra)
library(sf)
dcmetro <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Transportation_Rail_Bus_WebMercator/MapServer/51/query?outFields=*&where=1%3D1&f=geojson')
st_crs(dcmetro)
library(tidycensus)
library(tidyverse)
library(kableExtra)
library(sf)
variables <- load_variables(2017,'acs5')
write.csv(variables,'C:/Users/richa/OneDrive/Documents/School/UPENN/Fall_2023/Public Policy Analytics/Week2/DC_Transport_Project/variables.csv')
acs_variables <- c('B25026_001', #Total Population
'B05003B_001', #African American Pop
'B05003A_001', #White Population
'B05003C_001', #Alaskan and Native American
'B05003D_001', #Asian
'B05003E_001', #Native Hawian or Pacfic Islander
'B05003F_001', #Other
'B05003G_001', #Two Races
'B19013_001', #Median Income
'B25058_001') #Rent
census_api_key('4b917a3ebce557bc497aebb5aba1b04f0ff9c5ba',overwrite = FALSE)
dc2017tracts <- get_acs('tract',
variables = acs_variables,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide')%>%
rename('Total_pop' = 'B25026_001E',
'African_pop' = 'B05003B_001E',
'White_pop' = 'B05003A_001E',
'Alaskan_native_pop' = 'B05003C_001E',
'Asian_pop'='B05003D_001E',
'Native_hawian_pop'='B05003E_001E',
'Other_pop'='B05003F_001E',
'Two_races_pop'='B05003G_001E',
'Median_income'='B19013_001E',
'Median_rent'='B25058_001E') %>%
st_transform('EPSG:2248') %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(totalpop2 = African_pop + White_pop + Alaskan_native_pop + Asian_pop + Native_hawian_pop + Other_pop + Two_races_pop)
dcmetro <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Transportation_Rail_Bus_WebMercator/MapServer/51/query?outFields=*&where=1%3D1&f=geojson')
st_crs(dcmetro)
View(dcmetro)
dcmetro <- st_transform(dcmetro,'EPSG:2248')
View(dc2017tracts)
ggplot()+
geom_sf(data = dc2017tracts)+
geom_sd(data = dcmetro)
ggplot()+
geom_sf(data = dc2017tracts)+
geom_sf(data = dcmetro)
dc_boundary <- st_union(dc2017tracts)
View(dc_boundary)
ggplot()+
geom_sf(data = dc_boundary)+
geom_sf(data = dcmetro)
dcmetro <- dcmetro %>%
st_transform('EPSG:2248') %>%
dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ]
dcmetro <- dcmetro %>%
st_transform('EPSG:2248') %>%
dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ]
dcmetro <- dcmetro %>%
st_transform('EPSG:2248') %>%
dcmetro[st_intersects(dcmetro, dc_boundary)]
dc_boundary <- st_union(dc2017tracts)
dcmetro[st_intersects(dcmetro, dc_boundary)]
st_intersects(dcmetro, dc_boundary)
dcmetro[st_intersects(dcmetro, dc_boundary), sparse=FALSE]
st_intersects(dcmetro, dc_boundary)
View(dcmetro)
dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0]
dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ]
dcmetro <- dcmetro %>%
st_transform('EPSG:2248') %>%
dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ]
dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ]
dcmetro <- dcmetro %>%
dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ]
dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ]
dcmetro <- dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ]
dcmetro <- dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ]
ggplot()+
geom_sf(data = dc_boundary)+
geom_sf(data = dcmetro)
ggplot()+
geom_sf(data = dc_boundary)+
geom_sf(data = dcmetro)
knitr::opts_chunk$set(echo = TRUE)
# Load Libraries
library(tidyverse)
library(tidycensus)
library(sf)
library(kableExtra)
options(scipen=999) #
options(tigris_class = "sf")
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#f0f9e8","#bae4bc","#7bccc4","#43a2ca","#0868ac")
census_api_key("4b917a3ebce557bc497aebb5aba1b04f0ff9c5ba", overwrite = TRUE)
tracts16 <-
get_acs(geography = "tract",
variables = c("B25026_001E","B02001_002E",
"B15001_050E","B15001_009E",
"B19013_001E", "B25058_001E",
"B06012_002E"),
year=2016, state='PA',
county='Philadelphia', geometry=TRUE) %>%
st_transform('ESRI:102728')
glimpse(tracts16)
totalPop16 <-
tracts16 %>%
filter(variable == "B25026_001")
nrow(totalPop16)
names(totalPop16)
head(totalPop16)
glimpse(totalPop16)
# Let's "spread" the data into wide form
tracts16 <-
tracts16 %>%
dplyr::select( -NAME, -moe) %>%
spread(key = variable, value = estimate) %>%
rename(TotalPop = B25026_001,
Whites = B02001_002,
FemaleBachelors = B15001_050,
MaleBachelors = B15001_009,
MedHHInc = B19013_001,
MedRent = B25058_001,
TotalPoverty = B06012_002)
# Let's create new rate variables using mutate
tracts16 <-
tracts16 %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop, 0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop), 0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2016") %>%
dplyr::select(-Whites,-FemaleBachelors,-MaleBachelors,-TotalPoverty)
tracts20 <-
get_acs(geography = "tract",
variables = c("B25026_001E","B02001_002E",
"B15001_050E","B15001_009E",
"B19013_001E","B25058_001E",
"B06012_002E"),
year=2020, state=42, county=101,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E,
Whites = B02001_002E,
FemaleBachelors = B15001_050E,
MaleBachelors = B15001_009E,
MedHHInc = B19013_001E,
MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2020") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
allTracts <- rbind(tracts16,tracts20)
el <- st_read("https://opendata.arcgis.com/datasets/8c6e2575c8ad46eb887e6bb35825e1a6_0.geojson")
Broad_St <- st_read("https://opendata.arcgis.com/datasets/2e9037fd5bef406488ffe5bb67d21312_0.geojson")
septaStops <-
rbind(
el %>%
mutate(Line = "El") %>%
dplyr::select(Station, Line),
Broad_St %>%
mutate(Line ="Broad_St") %>%
dplyr::select(Station, Line)) %>%
st_transform(st_crs(tracts16))
ggplot() +
geom_sf(data=st_union(tracts16)) +
geom_sf(data=septaStops,
aes(colour = Line),
show.legend = "point", size= 2) +
scale_colour_manual(values = c("orange","blue")) +
labs(title="Septa Stops",
subtitle="Philadelphia, PA",
caption="Figure 2.5") +
mapTheme()
stopBuffer <- st_buffer(septaStops, 2640) #Make a seperate buffer around each point which is 2640 feet (i.e: 1/2 mile)
stopUnion <- st_union(st_buffer(septaStops, 2640)) #Merge together all the buffers
#Bind together the better and the unioned buffer
septaBuffers <-
rbind(
stopBuffer %>%
mutate(Legend = "Buffer") %>%
dplyr::select(Legend),
stopUnion %>%
st_sf() %>%
mutate(Legend = "Unioned Buffer"))
ggplot() +
geom_sf(data=septaBuffers) +
geom_sf(data=septaStops, show.legend = "point") +
facet_wrap(~Legend) +
labs(caption = "Figure 2.6") +
mapTheme()
