scale_fill_manual(values = palette5,
name = "Median Income")+
mapTheme()
knitr::opts_chunk$set(echo = TRUE,
fig.ritna = 3)
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(median_rent)))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Median Rent\n(Quintile Breaks)")+
mapTheme()
knitr::opts_chunk$set(echo = TRUE,
fig.ritna = 3)
library(tidycensus)
library(tidyverse)
library(kableExtra)
library(sf)
options(scipen=999) #
options(tigris_class = "sf")
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#ffffd4","#fed98e","#fe9929","#d95f0e","#993404")
acs_variables2017 <- c(
'B25119_001', #Median Household Income
'B25058_001', #Rent
'B08130_001', #Total Working Population
'B08130_016', #Total Population Commuting on Public Transit
'B08126_014', #Public Administration Workforce
'B17009_001') #Total Population
acs_variables2009 <- c(
'B25119_001', #Median Household Income
'B25058_001', #Rent
'B08130_001', #Total Working Population
'B08130_016', #Total Population Commuting on Public Transit
'C24030_028', #Public Administration Workforce Male
'C24030_055', #Public Administration Workforce Female
'B17009_001') #Total Population
dc2009tracts <- get_acs('tract',
variables = acs_variables2009,
year = 2009,
state = 'DC',
geometry = TRUE,
output = 'wide') %>%
rename('median_income'='B25119_001E',
'median_rent'='B25058_001E',
'working_pop' = 'B08130_001E',
'transit_pop' = 'B08130_016E',
'male_public_pop' = 'C24030_028E',
'female_public_pop' = 'C24030_055E',
'total_pop' = 'B17009_001E') %>%
st_transform('EPSG:2248') %>%
mutate(pct_transit = (transit_pop / working_pop) * 100,
public_pop = male_public_pop + female_public_pop,
pct_public = (public_pop / working_pop) * 100,
year = '2009') %>%
dplyr::select(-NAME, -starts_with("B0"), -starts_with("B1"), -starts_with("B2"),-starts_with("C2"), -male_public_pop, -female_public_pop)
dc2017tracts <- get_acs('tract',
variables = acs_variables2017,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide') %>%
rename('median_income'='B25119_001E',
'median_rent'='B25058_001E',
'working_pop' = 'B08130_001E',
'transit_pop' = 'B08130_016E',
'public_pop' = 'B08126_014E',
'total_pop' = 'B17009_001E',) %>%
st_transform('EPSG:2248') %>%
mutate(pct_transit = (transit_pop / working_pop) * 100,
pct_public = (public_pop / working_pop) * 100,
year = '2017') %>%
dplyr::select(-NAME, -starts_with("B0"), -starts_with("B1"), -starts_with("B2"))
dc_boundary <- st_union(dc2017tracts) #Create union of all census tracts in DC
dcmetro <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Transportation_Rail_Bus_WebMercator/MapServer/51/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('EPSG:2248') #Download DC Metro points and set projection
dcmetro <- dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ] #Intersect DC metro points with DC boundary
metro_buffer <- st_union(st_buffer(dcmetro,1320))
tod2017 <- dc2017tracts[st_intersects(dc2017tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='TOD')
non_tod2017 <- dc2017tracts[st_disjoint(dc2017tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='Non-TOD')
tod2009 <- dc2009tracts[st_intersects(dc2009tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='TOD')
non_tod2009 <- dc2009tracts[st_disjoint(dc2009tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='Non-TOD')
tod_dissolve <- st_union(tod2009)
all_census_data <- rbind(non_tod2017,tod2017,tod2009,non_tod2009)
dcmetrolines <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Transportation_Rail_Bus_WebMercator/MapServer/58/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('EPSG:2248') #Download DC Metro points and set projection
dcmetrolines <- st_intersection(dcmetrolines,dc_boundary)
dcwater <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Planimetrics_2015/MapServer/14/query?outFields=*&where=1%3D1&f=geojson') %>%
filter(DESCRIPTION != 'Pond' & DESCRIPTION != 'Pool')
ggplot()+
geom_sf(data = all_census_data, aes(fill = type))+
geom_sf(data = metro_buffer,fill='transparent',color='red')+
facet_wrap(~year)+
mapTheme()
all_census_data <- all_census_data %>%
mutate(income_class = cut(median_income, breaks = c(0, 25000, 50000, 75000, 100000, max(all_census_data$median_income, na.rm=TRUE))))
ggplot()+
geom_sf(data = all_census_data, aes(fill = income_class))+
geom_sf(data = dcwater,fill='#5ee4ff',linewidth=0)+
#geom_sf(data = dcmetrolines,linewidth=0.5)+
geom_sf(data = tod_dissolve,fill='transparent',color='#2dc11e',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Median Income")+
mapTheme()
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(median_rent)))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Median Rent\n(Quintile Breaks)")+
mapTheme()
bufers_join <- st_join(half_mile_buffer,centroids %>% dplyr::select(GEOID,year,total_pop,median_rent))
View(buffer_join)
View(buffer_join)
View(bufers_join)
View(metro_pop)
View(dcmetro)
View(dcmetro)
half_mile_buffer <- st_buffer(dcmetro, 2640) #Get half mile buffer
centroids <- st_centroid(all_census_data) #Get centroids of all census tracts
#Spatially join centroid of census tracts to buffers around metro stops and sum total population within 1/2 milf of buffer
bufers_join <- st_join(half_mile_buffer,centroids %>% dplyr::select(GEOID,year,total_pop,median_rent))
metro_pop <- st_join(half_mile_buffer,centroids %>% dplyr::select(GEOID,year,total_pop,median_rent)) %>%
group_by(NAME,year) %>% summarize(pop = sum(total_pop),rent=mean(median_rent, na.rm=TRUE)) %>%
st_drop_geometry()
dcmetro <- inner_join(dcmetro,metro_pop,by='NAME')
View(dcmetro)
ggplot()+
geom_sf(data = all_census_data)+
geom_sf(data = dcmetro, color='blue', aes(size=pop))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=0.5)+
scale_size(range = c(0.1, 3))+
mapTheme()+
facet_wrap(~year)
ggplot()+
geom_sf(data = all_census_data)+
geom_sf(data = dcmetro, color='blue', aes(size=pop))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=0.5)+
scale_size(range = c(0.1, 6))+
mapTheme()+
facet_wrap(~year)
ggplot()+
geom_sf(data = all_census_data)+
geom_sf(data = dcmetro, color='blue', aes(size=pop))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=0.5)+
scale_size(range = c(0.1, 3))+
mapTheme()+
facet_wrap(~year)
ggplot()+
geom_sf(data = all_census_data)+
geom_sf(data = dcmetro, color='blue', aes(size=rent))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=0.5)+
scale_size(range = c(0.01, 4))+
mapTheme()+
facet_wrap(~year)
allTracts_17 <- rbind(non_tod2017,tod2017)
allTracts_09 <- rbind(non_tod2009, tod2009)
MRB <- multipleRingBuffer(st_union(dcmetro), 27000, 1800)
rings_17 <- st_join(st_centroid(allTracts_17), MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(allTracts_17, by = "GEOID") %>%
mutate(distance_miles = distance / 5240) %>%
st_sf()
rings_09 <- st_join(st_centroid(allTracts_09), MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(allTracts_09, by = "GEOID") %>%
mutate(distance_miles = distance / 5240) %>%
st_sf()
rings <- rbind(rings_17, rings_09)ggplot()+
allTracts_17 <- rbind(non_tod2017,tod2017)
allTracts_09 <- rbind(non_tod2009, tod2009)
MRB <- multipleRingBuffer(st_union(dcmetro), 27000, 1800)
rings_17 <- st_join(st_centroid(allTracts_17), MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(allTracts_17, by = "GEOID") %>%
mutate(distance_miles = distance / 5240) %>%
st_sf()
rings_09 <- st_join(st_centroid(allTracts_09), MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(allTracts_09, by = "GEOID") %>%
mutate(distance_miles = distance / 5240) %>%
st_sf()
rings <- rbind(rings_17, rings_09)
ggplot()+
geom_sf(data = rings, aes(fill = distance_miles)) +
geom_sf(data = dcmetro, color = "white")  +
scale_fill_viridis_c() +mapTheme()ggplot() +
allTracts_17 <- rbind(non_tod2017,tod2017)
allTracts_09 <- rbind(non_tod2009, tod2009)
MRB <- multipleRingBuffer(st_union(dcmetro), 27000, 1800)
rings_17 <- st_join(st_centroid(allTracts_17), MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(allTracts_17, by = "GEOID") %>%
mutate(distance_miles = distance / 5240) %>%
st_sf()
rings_09 <- st_join(st_centroid(allTracts_09), MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(allTracts_09, by = "GEOID") %>%
mutate(distance_miles = distance / 5240) %>%
st_sf()
rings <- rbind(rings_17, rings_09)
ggplot()+
geom_sf(data = rings, aes(fill = distance_miles)) +
geom_sf(data = dcmetro, color = "white")  +
scale_fill_viridis_c() +mapTheme()
ggplot() +
geom_line(data = rings, aes(x = distance_miles, y = median_rent.x, color = year.y), stat = "summary", fun = mean) #add line tod vs non tod and how many houses there are tod vs non tod
maps <- lapply(c("median_income", "median_rent", "pct_transit", "pct_public"), function(i) {
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(all_census_data[[i]])))+
geom_sf(data = metro_buffer,fill='transparent',color='red')+
facet_wrap(~year)+  s
cale_fill_manual(values = palette5,
name = "Median Income\n(Quintile Breaks)")+
mapTheme()})
maps <- lapply(c("median_income", "median_rent", "pct_transit", "pct_public"), function(i) {
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(all_census_data[[i]])))+
geom_sf(data = metro_buffer,fill='transparent',color='red')+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Median Income\n(Quintile Breaks)")+
mapTheme()})
print(maps)
View(all_census_data)
knitr::opts_chunk$set(echo = TRUE,
fig.ritna = 3)
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(pct_transit)))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Percent Transit\n(Quintile Breaks)")+
mapTheme()
knitr::opts_chunk$set(echo = TRUE,
fig.ritna = 3)
library(tidycensus)
library(tidyverse)
library(kableExtra)
library(sf)
options(scipen=999) #
options(tigris_class = "sf")
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#ffffd4","#fed98e","#fe9929","#d95f0e","#993404")
acs_variables2017 <- c(
'B25119_001', #Median Household Income
'B25058_001', #Rent
'B08130_001', #Total Working Population
'B08130_016', #Total Population Commuting on Public Transit
'B08126_014', #Public Administration Workforce
'B17009_001') #Total Population
acs_variables2009 <- c(
'B25119_001', #Median Household Income
'B25058_001', #Rent
'B08130_001', #Total Working Population
'B08130_016', #Total Population Commuting on Public Transit
'C24030_028', #Public Administration Workforce Male
'C24030_055', #Public Administration Workforce Female
'B17009_001') #Total Population
dc2009tracts <- get_acs('tract',
variables = acs_variables2009,
year = 2009,
state = 'DC',
geometry = TRUE,
output = 'wide') %>%
rename('median_income'='B25119_001E',
'median_rent'='B25058_001E',
'working_pop' = 'B08130_001E',
'transit_pop' = 'B08130_016E',
'male_public_pop' = 'C24030_028E',
'female_public_pop' = 'C24030_055E',
'total_pop' = 'B17009_001E') %>%
st_transform('EPSG:2248') %>%
mutate(pct_transit = (transit_pop / working_pop) * 100,
public_pop = male_public_pop + female_public_pop,
pct_public = (public_pop / working_pop) * 100,
year = '2009') %>%
dplyr::select(-NAME, -starts_with("B0"), -starts_with("B1"), -starts_with("B2"),-starts_with("C2"), -male_public_pop, -female_public_pop)
dc2017tracts <- get_acs('tract',
variables = acs_variables2017,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide') %>%
rename('median_income'='B25119_001E',
'median_rent'='B25058_001E',
'working_pop' = 'B08130_001E',
'transit_pop' = 'B08130_016E',
'public_pop' = 'B08126_014E',
'total_pop' = 'B17009_001E',) %>%
st_transform('EPSG:2248') %>%
mutate(pct_transit = (transit_pop / working_pop) * 100,
pct_public = (public_pop / working_pop) * 100,
year = '2017') %>%
dplyr::select(-NAME, -starts_with("B0"), -starts_with("B1"), -starts_with("B2"))
dc_boundary <- st_union(dc2017tracts) #Create union of all census tracts in DC
dcmetro <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Transportation_Rail_Bus_WebMercator/MapServer/51/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('EPSG:2248') #Download DC Metro points and set projection
dcmetro <- dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ] #Intersect DC metro points with DC boundary
metro_buffer <- st_union(st_buffer(dcmetro,1320))
tod2017 <- dc2017tracts[st_intersects(dc2017tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='TOD')
non_tod2017 <- dc2017tracts[st_disjoint(dc2017tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='Non-TOD')
tod2009 <- dc2009tracts[st_intersects(dc2009tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='TOD')
non_tod2009 <- dc2009tracts[st_disjoint(dc2009tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='Non-TOD')
tod_dissolve <- st_union(tod2009)
all_census_data <- rbind(non_tod2017,tod2017,tod2009,non_tod2009)
dcmetrolines <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Transportation_Rail_Bus_WebMercator/MapServer/58/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('EPSG:2248') #Download DC Metro points and set projection
dcmetrolines <- st_intersection(dcmetrolines,dc_boundary)
dcwater <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Planimetrics_2015/MapServer/14/query?outFields=*&where=1%3D1&f=geojson') %>%
filter(DESCRIPTION != 'Pond' & DESCRIPTION != 'Pool')
ggplot()+
geom_sf(data = all_census_data, aes(fill = type))+
geom_sf(data = metro_buffer,fill='transparent',color='red')+
facet_wrap(~year)+
mapTheme()
all_census_data <- all_census_data %>%
mutate(income_class = cut(median_income, breaks = c(0, 25000, 50000, 75000, 100000, max(all_census_data$median_income, na.rm=TRUE))))
ggplot()+
geom_sf(data = all_census_data, aes(fill = income_class))+
geom_sf(data = dcwater,fill='#5ee4ff',linewidth=0)+
#geom_sf(data = dcmetrolines,linewidth=0.5)+
geom_sf(data = tod_dissolve,fill='transparent',color='#2dc11e',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Median Income")+
mapTheme()
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(median_rent)))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Median Rent\n(Quintile Breaks)")+
mapTheme()
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(pct_transit)))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Percent Transit\n(Quintile Breaks)")+
mapTheme()
View(centroids_filt)
knitr::opts_chunk$set(echo = TRUE,
fig.ritna = 3)
library(tidycensus)
library(tidyverse)
library(kableExtra)
library(sf)
options(scipen=999) #
options(tigris_class = "sf")
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#ffffd4","#fed98e","#fe9929","#d95f0e","#993404")
acs_variables2017 <- c(
'B25119_001', #Median Household Income
'B25058_001', #Rent
'B08130_001', #Total Working Population
'B08130_016', #Total Population Commuting on Public Transit
'B08126_014', #Public Administration Workforce
'B17009_001') #Total Population
acs_variables2009 <- c(
'B25119_001', #Median Household Income
'B25058_001', #Rent
'B08130_001', #Total Working Population
'B08130_016', #Total Population Commuting on Public Transit
'C24030_028', #Public Administration Workforce Male
'C24030_055', #Public Administration Workforce Female
'B17009_001') #Total Population
dc2009tracts <- get_acs('tract',
variables = acs_variables2009,
year = 2009,
state = 'DC',
geometry = TRUE,
output = 'wide') %>%
rename('median_income'='B25119_001E',
'median_rent'='B25058_001E',
'working_pop' = 'B08130_001E',
'transit_pop' = 'B08130_016E',
'male_public_pop' = 'C24030_028E',
'female_public_pop' = 'C24030_055E',
'total_pop' = 'B17009_001E') %>%
st_transform('EPSG:2248') %>%
mutate(pct_transit = (transit_pop / working_pop) * 100,
public_pop = male_public_pop + female_public_pop,
pct_public = (public_pop / working_pop) * 100,
year = '2009') %>%
dplyr::select(-NAME, -starts_with("B0"), -starts_with("B1"), -starts_with("B2"),-starts_with("C2"), -male_public_pop, -female_public_pop)
dc2017tracts <- get_acs('tract',
variables = acs_variables2017,
year = 2017,
state = 'DC',
geometry = TRUE,
output = 'wide') %>%
rename('median_income'='B25119_001E',
'median_rent'='B25058_001E',
'working_pop' = 'B08130_001E',
'transit_pop' = 'B08130_016E',
'public_pop' = 'B08126_014E',
'total_pop' = 'B17009_001E',) %>%
st_transform('EPSG:2248') %>%
mutate(pct_transit = (transit_pop / working_pop) * 100,
pct_public = (public_pop / working_pop) * 100,
year = '2017') %>%
dplyr::select(-NAME, -starts_with("B0"), -starts_with("B1"), -starts_with("B2"))
dc_boundary <- st_union(dc2017tracts) #Create union of all census tracts in DC
dcmetro <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Transportation_Rail_Bus_WebMercator/MapServer/51/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('EPSG:2248') #Download DC Metro points and set projection
dcmetro <- dcmetro[st_intersects(dcmetro, dc_boundary) %>% lengths > 0, ] #Intersect DC metro points with DC boundary
metro_buffer <- st_union(st_buffer(dcmetro,1320))
tod2017 <- dc2017tracts[st_intersects(dc2017tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='TOD')
non_tod2017 <- dc2017tracts[st_disjoint(dc2017tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='Non-TOD')
tod2009 <- dc2009tracts[st_intersects(dc2009tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='TOD')
non_tod2009 <- dc2009tracts[st_disjoint(dc2009tracts, metro_buffer) %>% lengths > 0, ] %>%
mutate(type='Non-TOD')
tod_dissolve <- st_union(tod2009)
all_census_data <- rbind(non_tod2017,tod2017,tod2009,non_tod2009)
dcmetrolines <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Transportation_Rail_Bus_WebMercator/MapServer/58/query?outFields=*&where=1%3D1&f=geojson') %>%
st_transform('EPSG:2248') #Download DC Metro points and set projection
dcmetrolines <- st_intersection(dcmetrolines,dc_boundary)
dcwater <- st_read('https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Planimetrics_2015/MapServer/14/query?outFields=*&where=1%3D1&f=geojson') %>%
filter(DESCRIPTION != 'Pond' & DESCRIPTION != 'Pool')
ggplot()+
geom_sf(data = all_census_data, aes(fill = type))+
geom_sf(data = metro_buffer,fill='transparent',color='red')+
facet_wrap(~year)+
mapTheme()
all_census_data <- all_census_data %>%
mutate(income_class = cut(median_income, breaks = c(0, 25000, 50000, 75000, 100000, max(all_census_data$median_income, na.rm=TRUE))))
ggplot()+
geom_sf(data = all_census_data, aes(fill = income_class))+
geom_sf(data = dcwater,fill='#5ee4ff',linewidth=0)+
#geom_sf(data = dcmetrolines,linewidth=0.5)+
geom_sf(data = tod_dissolve,fill='transparent',color='#2dc11e',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Median Income")+
mapTheme()
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(median_rent)))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Median Rent\n(Quintile Breaks)")+
mapTheme()
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(pct_transit)))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Percent Transit\n(Quintile Breaks)")+
mapTheme()
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(pct_public)))+
geom_sf(data = tod_dissolve,fill='transparent',color='red',linewidth=1)+
geom_sf(data = dcmetro)+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Percent Public\n(Quintile Breaks)")+
mapTheme()
maps <- lapply(c("median_income", "median_rent", "pct_transit", "pct_public"), function(i) {
ggplot()+
geom_sf(data = all_census_data, aes(fill = q5(all_census_data[[i]])))+
geom_sf(data = metro_buffer,fill='transparent',color='red')+
facet_wrap(~year)+
scale_fill_manual(values = palette5,
name = "Median Income\n(Quintile Breaks)")+
mapTheme()})
print(maps)
census_data_summary <-
st_drop_geometry(all_census_data) %>%
group_by(year, type) %>%
summarize(median_income = mean(median_income, na.rm = T),
median_rent = mean(median_rent, na.rm = T),
percent_transit = mean(pct_transit, na.rm = T),
percent_public = mean(pct_public, na.rm = T))
census_data_summary %>%
gather(Variable, Value, -year, -type) %>%
ggplot(aes(year, Value, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Variable, scales = "free", ncol=5) +
scale_fill_manual(values = c("#bae4bc", "#0868ac")) +
labs(title = "Indicator differences across time and space") +
plotTheme() + theme(legend.position="bottom")
kable(census_data_summary) %>%
kable_styling() %>%
footnote(general_title = "\n",
general = "Table 1.0")
kable(census_data_summary) %>%
kable_styling() %>%
footnote(general_title = "\n",
general = "Table 1.0")
